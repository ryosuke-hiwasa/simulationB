<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.slshop.cart.CartMapper">

	<resultMap id="cartMap"
		type="com.slshop.common.entity.CartItem">
		<id column="ID" property="id" />
		<result column="CUSTOMER_ID" property="customerId" />
		<result column="PRODUCT_ID" property="productId" />
		<result column="QUANTITY" property="quantity" />

		<association property="product"
			javaType="com.slshop.common.entity.product.Product">
			<id column="P_ID" property="id" />
			<result column="NAME" property="name" />
			<result column="PRICE" property="price" />
		</association>

	</resultMap>
	<select id="findAll" resultMap="cartMap">
		SELECT
			ci.ID,
			ci.CUSTOMER_ID,
			ci.PRODUCT_ID,
			ci.QUANTITY,
			p.ID AS P_ID,
			p.NAME,
			p.PRICE
		FROM
			CART_ITEMS ci
		JOIN
			PRODUCTS p ON ci.PRODUCT_ID = p.ID
		WHERE
			ci.CUSTOMER_ID = #{customerId}
	</select>

	<select id="getQuantity" resultType="Integer"
		parameterType="map">
		SELECT QUANTITY
		FROM CART_ITEMS
		WHERE CUSTOMER_ID =
		#{customerId}
		AND PRODUCT_ID = #{productId}
	</select>

	<select id="checkItem" resultType="boolean" parameterType="map">
		SELECT CASE WHEN EXISTS (
		SELECT 1
		FROM CART_ITEMS
		WHERE CUSTOMER_ID =
		#{customerId} AND PRODUCT_ID = #{productId}
		) THEN 1 ELSE 0 END
		FROM
		DUAL
	</select>

	<select id="getProduct" resultMap="cartMap">
		SELECT
			ci.ID,
			ci.CUSTOMER_ID,
			ci.PRODUCT_ID,
			ci.QUANTITY,
			p.ID AS P_ID,
			p.NAME,
			p.PRICE
		FROM
			CART_ITEMS ci
		JOIN
			PRODUCTS p ON ci.PRODUCT_ID = p.ID
		WHERE
			ci.CUSTOMER_ID = #{customerId}
	</select>

	<update id="addQuan" parameterType="map">
		UPDATE CART_ITEMS
		SET QUANTITY
		= QUANTITY + #{quantity}
		WHERE CUSTOMER_ID = #{customerId}
		AND
		PRODUCT_ID = #{productId}
	</update>

	<update id="updateQuan" parameterType="map">
		UPDATE CART_ITEMS
		SET
		QUANTITY = QUANTITY = #{quantity}
		WHERE CUSTOMER_ID = #{customerId}
		AND
		PRODUCT_ID = #{productId}
	</update>

	<insert id="insert" useGeneratedKeys="true" keyColumn="ID"
		parameterType="map">
		INSERT INTO CART_ITEMS
		(ID, CUSTOMER_ID, PRODUCT_ID,
		QUANTITY)
		VALUES
		(CART_ITEMS_ID_SEQ.nextval, #{customerId},
		#{productId}, #{quantity})
	</insert>

	<delete id="deleteById">
		DELETE FROM CART_ITEMS WHERE ID = #{id}
	</delete>
</mapper>